services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_mvc_app
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/fastapi_mvc
      - DEBUG=True
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # AWS LocalStack configuration
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_BUCKET_NAME=fastapi-mvc-bucket
      # MailHog configuration
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - MAIL_FROM=noreply@fastapi-mvc.local
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
      - localstack
      - mailhog
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: fastapi_mvc_db
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fastapi_mvc
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: fastapi_mvc_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_mvc_celery_worker
    restart: always
    command: poetry run celery -A app.workers.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fastapi_mvc
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - app
      - db
      - redis
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    container_name: fastapi_mvc_localstack
    restart: always
    ports:
      - "4566:4566"  # LocalStack edge port
      - "4510-4559:4510-4559"  # External service port range
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - PERSISTENCE=1
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mailhog:
    image: mailhog/mailhog:latest
    container_name: fastapi_mvc_mailhog
    restart: always
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  localstack_data:

networks:
  app-network:
    driver: bridge
